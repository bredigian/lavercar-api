// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum RESERVE_STATUS {
  PENDING
  COMPLETED
  CANCELLED
}

enum PAYMENT_STATUS {
  PENDING
  APPROVED
  REJECTED
  CANCELLED
}

model Reserve {
  id             String         @id @unique @default(uuid())
  number         Int            @default(autoincrement())
  date           DateTime       @unique
  user_name      String
  user_email     String?
  user_phone     String
  status         RESERVE_STATUS
  payment_id     String?
  payment_status PAYMENT_STATUS
  created_at     DateTime       @default(now())
  updated_at     DateTime       @updatedAt
  Income         Income[]
  washing_id     String
  WashingType    WashingType    @relation(fields: [washing_id], references: [id])
}

model Workhour {
  id      String @id @unique @default(uuid())
  hour    Int
  time    Int
  weekday Int
}

model Log {
  id          String @id @unique @default(uuid())
  description String
}

model User {
  id         String    @id @unique @default(uuid())
  first_name String
  last_name  String
  username   String    @unique
  password   String
  Session    Session[]
}

model Session {
  id         String   @id @unique @default(uuid())
  user_id    String
  user       User     @relation(fields: [user_id], references: [id], onDelete: Cascade)
  token      String   @unique
  created_at DateTime @default(now())
  expire_in  DateTime
  updated_at DateTime @updatedAt
}

model Income {
  id         String   @id @unique @default(uuid())
  date       DateTime @default(now())
  value      Float
  reserve_id String   @unique
  reserve    Reserve  @relation(fields: [reserve_id], references: [id], onDelete: Cascade)
}

model WashingType {
  id          String    @id @unique @default(uuid())
  name        String
  description String?
  price       Float
  Reserve     Reserve[]
}
